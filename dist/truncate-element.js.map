{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/truncate-element.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TruncateElement","HTMLElement","super","_highlightQuery","config","number","more","less","completeWord","hashtag","hasLiteral","highlightCondition","highlightList","color","mention","text","replace","identifyLink","hasQueryString","title","class","style","domain","protocol","target","enabled","linkList","linkCount","hashtagCount","mentionCount","replaceString","connectedLoaded","dataLoaded","tempHtml","window","trun","this","MutationObserver","initialValues","observe","characterData","childList","attributes","attrName","_oldVal","_newVal","innerHTML","conf","getAttribute","length","JSON","parse","sort","a","b","instanceOfHighlighQuery","main","remainText","cutFindHighlight","span","document","createElement","cursor","classList","add","addEventListener","event","showFullText","hideSomeText","appendChild","whiteSpace","mouseDown","stopPropagation","highlightQuery","checkWordCut","substring","linkIdentify","findHashtag","findMention","highlight","reduce","link","currentIndex","href","includes","trimStart","klass","regex","protocolRegex","domainRegex","queryString","recognizingProtocol","recongnizingDomain","RegExp","exec","push","find","join","content","q","pattern","match","words","Set","word","customElements","define"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BC/ErD,uDAAO,MAAMC,UAAwBC,YA6CjC,cACIC,QA7CJ,KAAAC,gBAAiD,GAEjD,KAAAC,OAAiB,CACbC,OAAQ,EACRC,KAAM,GACNC,KAAM,GACNC,cAAc,EACdC,SAAS,EACTC,YAAY,EACZC,mBAAoB,UACpBC,cAAe,CAAC,CAAErC,KAAM,GAAIsC,MAAO,KACnCC,SAAS,GAEb,KAAAT,OAAiB,IACjB,KAAAC,KAAe,OACf,KAAAC,KAAe,OACf,KAAAC,cAAwB,EACxB,KAAAC,SAAmB,EACnB,KAAAC,YAAsB,EACtB,KAAAC,mBAA6B,UAC7B,KAAAC,cAAiC,CAAC,CAAErC,KAAM,GAAIsC,MAAO,KACrD,KAAAE,KAAe,GAEf,KAAAC,SAAmB,EACnB,KAAAF,SAAmB,EACnB,KAAAG,aAA6B,CACzBC,gBAAgB,EAChBC,MAAO,GACPC,MAAO,GACPC,MAAO,mCACPC,OAAQ,GACRC,SAAU,GACVC,OAAQ,SACRC,SAAS,GAEb,KAAAC,SAA0B,GAC1B,KAAAC,UAAoB,EACpB,KAAAC,aAAuB,EACvB,KAAAC,aAAuB,EACvB,KAAAC,cAAgB,MAChB,KAAAC,iBAAkB,EAClB,KAAAC,YAAa,EACb,KAAAC,SAAW,GAIDC,OAAQC,KAAOC,KACJ,IAAIC,iBAAiB,KAC9BD,KAAKL,kBAAoBK,KAAKJ,YAC9BI,KAAKE,kBAKJC,QAAQH,KAAM,CAAEI,eAAe,EAAOC,WAAW,EAAMC,YAAY,IAOxE,wBAAwBhD,GAC5B,MAAyB,iBAAXA,GAA8B,SAAUA,EAG1D,oBACI0C,KAAKE,gBACLF,KAAKL,iBAAkB,EAG3B,yBAAyBY,EAAkBC,EAAcC,GACjDT,KAAKL,iBACLK,KAAKE,cAAcK,GAI3B,gCACI,MAAO,CAAC,UAGJ,cAAcA,EAAmB,UAErC,IAAKP,KAAKU,UACN,OAECV,KAAKH,WACNG,KAAKH,SAAWG,KAAKU,WAGzB,MAAMC,EAAOX,KAAKY,aAAaL,IAC3BI,aAAI,EAAJA,EAAME,UACNb,KAAKhC,OAAS8C,KAAKC,MAAMJ,GACzBX,KAAK/B,OAAS+B,KAAKhC,OAAOC,OAAS+B,KAAKhC,OAAOC,OAAS+B,KAAK/B,OAC7D+B,KAAK9B,KAAO8B,KAAKhC,OAAOE,KAAO8B,KAAKhC,OAAOE,KAAO8B,KAAK9B,KACvD8B,KAAK7B,KAAO6B,KAAKhC,OAAOG,KAAO6B,KAAKhC,OAAOG,KAAO6B,KAAK7B,KACvD6B,KAAKjC,gBAAkBiC,KAAKhC,OAAOQ,cAAgBwB,KAAKhC,OAAOQ,cAAgBwB,KAAKjC,gBACpFiC,KAAKzB,mBAAqByB,KAAKhC,OAAOO,mBAAqByB,KAAKhC,OAAOO,mBAAqByB,KAAKzB,mBACjGyB,KAAK5B,aAAe4B,KAAKhC,OAAOI,aAAe4B,KAAKhC,OAAOI,aAAe4B,KAAK5B,aAC/E4B,KAAK3B,QAAU2B,KAAKhC,OAAOK,QAAU2B,KAAKhC,OAAOK,QAAU2B,KAAK3B,QAChE2B,KAAK1B,WAAa0B,KAAKhC,OAAOM,WAAa0B,KAAKhC,OAAOM,WAAa0B,KAAK1B,WACzE0B,KAAKtB,QAAUsB,KAAKhC,OAAOU,QAAUsB,KAAKhC,OAAOU,QAAUsB,KAAKtB,QAC5DsB,KAAKhC,OAAOa,eACZmB,KAAKnB,aAAaQ,QAAUW,KAAKhC,OAAOa,aAAaQ,QACrDW,KAAKnB,aAAaE,MAAQiB,KAAKhC,OAAOa,aAAaE,MAAQiB,KAAKhC,OAAOa,aAAaE,MAAQiB,KAAKnB,aAAaE,MAC9GiB,KAAKnB,aAAaG,MAAQgB,KAAKhC,OAAOa,aAAaG,MAAQgB,KAAKhC,OAAOa,aAAaG,MAAQgB,KAAKnB,aAAaG,MAC9GgB,KAAKnB,aAAaI,MAAQe,KAAKhC,OAAOa,aAAaI,MAAQe,KAAKhC,OAAOa,aAAaI,MAAQe,KAAKnB,aAAaI,MAC9Ge,KAAKnB,aAAaK,OAASc,KAAKhC,OAAOa,aAAaK,OAASc,KAAKhC,OAAOa,aAAaK,OAASc,KAAKnB,aAAaK,OACjHc,KAAKnB,aAAaM,SAAWa,KAAKhC,OAAOa,aAAaM,SAAWa,KAAKhC,OAAOa,aAAaM,SAAWa,KAAKnB,aAAaM,SACvHa,KAAKnB,aAAaO,OAASY,KAAKhC,OAAOa,aAAaO,OAASY,KAAKhC,OAAOa,aAAaO,OAASY,KAAKnB,aAAaO,OACjHY,KAAKnB,aAAaC,eAAiBkB,KAAKhC,OAAOa,aAAaC,eAAiBkB,KAAKhC,OAAOa,aAAaC,eAAiBkB,KAAKnB,aAAaC,gBAO7IkB,KAAKjC,iBAAmBiC,KAAKjC,gBAAgB8C,QAC7Cb,KAAKjC,gBAAgBiD,KAAK,CAACC,EAA2BC,KAClD,GAAIlB,KAAKmB,wBAAwBF,IAAMjB,KAAKmB,wBAAwBD,IAChE,GAAID,EAAE9E,MAAQ+E,EAAE/E,KACZ,OAAO8E,EAAE9E,KAAK0E,OAASK,EAAE/E,KAAK0E,YAEjC,GAAiB,iBAANI,GAAkBjB,KAAKmB,wBAAwBD,IAC3D,GAAIA,EAAE/E,KACF,OAAO8E,EAAEJ,OAASK,EAAE/E,KAAK0E,WAE5B,KAAIb,KAAKmB,wBAAwBD,IAAmB,iBAAND,EAI9C,MAAiB,iBAANC,GAA+B,iBAAND,EAC9BA,EAAEJ,OAASK,EAAEL,OAGb,EAPP,GAAIK,EAAE/E,KACF,OAAO8E,EAAEJ,OAASK,EAAE/E,KAAK0E,OAOjC,OAAO,IAEfb,KAAKoB,KAAKpB,KAAKH,UACfG,KAAKJ,YAAa,GAMd,KAAKjB,GACJqB,KAAK1B,aAAYK,EAAOA,EAAKC,QAAQ,qBAAsB,MAChEoB,KAAKrB,KAAOA,EACZ,IAAI0C,EAAa,GACjB,GAAI1C,EAAKkC,OAASb,KAAK/B,OAAQ,CAC3BoD,EAAarB,KAAKsB,iBAAiBtB,KAAK5B,aAAc4B,KAAK3B,QAAS2B,KAAKtB,QAASC,EAAMqB,KAAKzB,mBAAoByB,KAAKjC,gBAAiBiC,KAAK/B,QAC5I+B,KAAKpB,SAAU,EACfoB,KAAKU,UAAYW,EAAa,QAC9B,MAAME,EAAOC,SAASC,cAAc,QACpCF,EAAKb,UAAYV,KAAK9B,KACtBqD,EAAKtC,MAAMR,MAAQ,UACnB8C,EAAKtC,MAAMyC,OAAS,UACpBH,EAAKI,UAAUC,IAAI,cACnB5B,KAAKU,UAAYW,EAAa,OAE9BE,EAAKM,iBAAiB,QAAUC,IAA2B,IAAjB9B,KAAKpB,QAAmBoB,KAAK+B,aAAaD,GAAS9B,KAAKgC,aAAaF,IAC/G9B,KAAKiC,YAAYV,QAGjB5C,EAAOqB,KAAKsB,iBAAiBtB,KAAK5B,aAAc4B,KAAK3B,QAAS2B,KAAKtB,QAASC,EAAMqB,KAAKzB,mBAAoByB,KAAKjC,iBAChHiC,KAAKU,UAAY/B,EAGjBqB,KAAK1B,aACL0B,KAAKf,MAAMiD,WAAa,YAQxB,aAAaC,GACjB,MAAMZ,EAAOC,SAASC,cAAc,QACpCF,EAAKb,UAAY,IAAMV,KAAK7B,KAC5BoD,EAAKtC,MAAMR,MAAQ,UACnB8C,EAAKtC,MAAMyC,OAAS,UACpBH,EAAKI,UAAUC,IAAI,cACnB5B,KAAKU,UAAYV,KAAKsB,iBAAiBtB,KAAK5B,aAAc4B,KAAK3B,QAAS2B,KAAKtB,QAASsB,KAAKrB,KAAMqB,KAAKzB,mBAAoByB,KAAKjC,iBAE3HiC,KAAK1B,aACL0B,KAAKf,MAAMiD,WAAa,YAE5BX,EAAKM,iBAAiB,QAAUC,GAAU9B,KAAKgC,aAAaF,IAC5D9B,KAAKiC,YAAYV,GAEjBY,EAAUC,kBACVpC,KAAKpB,SAAU,EAKX,aAAauD,GACjB,MAAMd,EAAarB,KAAKsB,iBAAiBtB,KAAK5B,aAAc4B,KAAK3B,QAAS2B,KAAKtB,QAASsB,KAAKrB,KAAMqB,KAAKzB,mBAAoByB,KAAKjC,gBAAiBiC,KAAK/B,QACjJsD,EAAOC,SAASC,cAAc,QACpCF,EAAKtC,MAAMR,MAAQ,UACnB8C,EAAKI,UAAUC,IAAI,cAEnBL,EAAKb,UAAYV,KAAK9B,KACtB8B,KAAKU,UAAYW,EAAa,QAE1BrB,KAAK1B,aACL0B,KAAKf,MAAMiD,WAAa,YAE5BX,EAAKM,iBAAiB,QAAUC,GAAU9B,KAAK+B,aAAaD,IAC5D9B,KAAKiC,YAAYV,GAEjBY,EAAUC,kBACVpC,KAAKpB,SAAU,EAYX,iBAAiBR,EAAuBC,EAAkBK,EAAkBC,EAAcJ,EAAqB,UAAW8D,EAAgD,GAAIpE,GAsBlL,OArBIA,IACAU,EAAOP,EAAe4B,KAAKsC,aAAarE,EAAQU,GAAQA,EAAK4D,UAAU,EAAGtE,IAC1E+B,KAAKnB,aAAaQ,UAClBV,EAAOqB,KAAKwC,aAAa7D,IAE7BA,EAAON,EAAU2B,KAAKyC,YAAY9D,GAAQA,EAC1CA,EAAOD,EAAUsB,KAAK0C,YAAY/D,GAAQA,EAC1CA,EAAOqB,KAAK2C,UAAUhE,EAAMJ,EAAoB8D,GAE5CrC,KAAKV,SAASuB,OAAS,IACvBlC,EAAOqB,KAAKV,SAASsD,OAAO,CAACjE,EAAMkE,EAAMC,KACrC,MAAMC,EAAOF,EAAKG,SAAS,QAAUH,EAAKI,YAAc,WAAaJ,EAAKI,YACpE7D,EAASY,KAAKnB,aAAaO,OAASY,KAAKnB,aAAaO,OAAS,SAC/DL,EAAQiB,KAAKnB,aAAaE,MAAQiB,KAAKnB,aAAaE,MAAQ,GAC5DmE,EAAQlD,KAAKnB,aAAaG,MAAQgB,KAAKnB,aAAaG,MAAQ,GAC5DC,EAAQe,KAAKnB,aAAaI,MAAQe,KAAKnB,aAAaI,MAAQ,GAClE,OAAON,EAAKC,QAAQ,GAAGoB,KAAKN,gBAAgBoD,IAAe9C,KAAKN,gBAAiB,YAAYqD,cAAiB3D,aAAkBL,aAAiBE,aAAiBiE,MAAUL,UAC7KlE,IAEPqB,KAAKT,UAAY,EACjBS,KAAKV,SAAW,GACTX,EASH,aAAaA,GAGjB,IAAIwE,EACAC,EAAgB,+CAChBC,EAAc,GACdC,EAAc,OAWlB,IAAItH,EACJ,IAVIgE,KAAKnB,aAAaM,UAAYa,KAAKnB,aAAaM,SAAS0B,OAAS,IAClEuC,EAAgBpD,KAAKuD,uBACrBvD,KAAKnB,aAAaK,QAAUc,KAAKnB,aAAaK,OAAO2B,OAAS,IAC9DwC,EAAcrD,KAAKwD,sBACnBxD,KAAKnB,aAAaC,iBAClBwE,EANgB,mCAQpBH,EAAQ,IAAIM,OAAO,UAAUL,kBAA8BC,IAAcC,IAAe,MAGtD,QAA1BtH,EAAImH,EAAMO,KAAK/E,KACnBqB,KAAKV,SAASqE,KAAK3H,EAAE,IACrB2C,EAAOA,EAAKC,QAAQ5C,EAAE,GAAIgE,KAAKN,cAAgBM,KAAKT,UAAYS,KAAKN,eACrEM,KAAKT,YAET,OAAOZ,EAKH,sBACJ,GAAIqB,KAAKnB,aAAaM,UAAYa,KAAKnB,aAAaM,SAAS0B,OAAS,EAAG,CAErEb,KAAKnB,aAAaM,SAAWa,KAAKnB,aAAaM,SAAS6B,OACxD,IAAI7B,EAAW,GAaf,OAZIa,KAAKnB,aAAaM,SAASyE,KAAKlG,GAAW,QAANA,IACrCyB,EAASwE,KAAK,cAEd3D,KAAKnB,aAAaM,SAASyE,KAAKlG,GAAW,SAANA,IACrCyB,EAASwE,KAAK,wBAEd3D,KAAKnB,aAAaM,SAASyE,KAAKlG,GAAW,UAANA,IACrCyB,EAASwE,KAAK,yBAEd3D,KAAKnB,aAAaM,SAASyE,KAAKlG,GAAW,QAANA,IACrCyB,EAASwE,KAAK,WAEX,IAAMxE,EAAS0E,KAAK,KAAO,IAEtC,MAAO,GAMH,qBACJ,OAAO7D,KAAKnB,aAAaK,OAAS,IAAMc,KAAKnB,aAAaK,OAAO2E,KAAK,KAAO,IAAM,GAU/E,UAAUC,EAAiBvF,EAAqB,GAAI8D,GAExD,IAAKA,IAAmBA,EAAexB,OACnC,OAAOiD,EAGX,GAA0B,WAAtBvF,EAAiC,CACjC,IAAK,IAAIwF,KAAK1B,EAAgB,CAC1B,IAAI2B,EAAU,GAEd,GAAiB,iBAAND,EAAgB,CACvBC,EAAU,mBAAqBD,EAAE5H,KAAO,gBACxC,MAAMsC,EAAQsF,EAAEtF,MAAQsF,EAAEtF,MAAQ,SAClCqF,EAAUA,EAAQlF,QAAQ,IAAI6E,OAAOO,EAAS,OAAQC,GAC3C,2BAA2BxF,MAAUwF,iBAKhDD,EAAU,mBAAqBD,EAAI,gBACnCD,EAAUA,EAAQlF,QAAQ,IAAI6E,OAAOO,EAAS,OAAQC,GAC3C,mCAAmCA,YAItD,OAAOH,EAIP,IAAK,IAAIC,KAAK1B,EAEV,GAAiB,iBAAN0B,GAAkBA,EAAE5H,KAAM,CACjC,IAAI+H,EAAQJ,EAAQG,MAAM,IAAIR,OAAOM,EAAE5H,KAAM,QAE7C,GADA+H,EAAQ,IAAI,IAAIC,IAAID,IAChBA,EACA,IAAK,MAAME,KAAQF,EAAO,CACtB,MAAMzF,EAAQsF,EAAEtF,MAAQsF,EAAEtF,MAAQ,SAClCqF,EAAUA,EAAQlF,QAAQ,IAAI6E,OAAOM,EAAE5H,KAAM,MAAO,iCAAiCsC,MAAU2F,kBAKvG,GAAiB,iBAANL,EAAgB,CACvB,IAAIG,EAAQJ,EAAQG,MAAM,IAAIR,OAAOM,EAAG,QAExC,GADAG,EAAQ,IAAI,IAAIC,IAAID,IAChBA,EACA,IAAK,MAAME,KAAQF,EACfJ,EAAUA,EAAQlF,QAAQ,IAAI6E,OAAOW,EAAM,MAAO,yCAAyCA,YAK/G,OAAON,EASP,aAAa7F,EAAgBU,GACjC,IAAI/C,EAAI,EACR,IAAKA,EAAIqC,EAAQrC,EAAI+C,EAAKkC,QACP,KAAXlC,EAAK/C,GADqBA,KAGlC,OAAO+C,EAAK4D,UAAU,EAAG3G,GAOrB,YAAY+C,GAIhB,OAHAA,EAAOA,EAAKC,QAAQ,qDAAuDqF,GAChE,+CAA+CA,YAStD,YAAYtF,GAIhB,OAHAA,EAAOA,EAAKC,QAAQ,sCAAwCqF,GACjD,+CAA+CA,aAMlEI,eAAeC,OAAO,mBAAoB1G","file":"truncate-element.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { HighlighQuery, Config, IdentifyLink } from \"./interfaces\";\r\nexport { Config, HighlighQuery, IdentifyLink } from \"./interfaces\"\r\n\r\nexport class TruncateElement extends HTMLElement {\r\n    _highlightQuery: Array<HighlighQuery | string> = [];\r\n\r\n    config: Config = {\r\n        number: 0,\r\n        more: \"\",\r\n        less: \"\",\r\n        completeWord: false,\r\n        hashtag: false,\r\n        hasLiteral: false,\r\n        highlightCondition: 'exactly',\r\n        highlightList: [{ name: '', color: '' }],\r\n        mention: false,\r\n    };\r\n    number: number = 100;\r\n    more: string = \"show\";\r\n    less: string = \"hide\";\r\n    completeWord: boolean = false;\r\n    hashtag: boolean = false;\r\n    hasLiteral: boolean = false;\r\n    highlightCondition: string = 'exactly';\r\n    highlightList: HighlighQuery[] = [{ name: '', color: '' }];\r\n    text: string = \"\";\r\n    /** to display show or hide button*/\r\n    replace: boolean = false;\r\n    mention: boolean = false;\r\n    identifyLink: IdentifyLink = {\r\n        hasQueryString: false,\r\n        title: \"\",\r\n        class: \"\",\r\n        style: \"text-decoration:none;color:blue;\",\r\n        domain: [],\r\n        protocol: [],\r\n        target: \"_blank\",\r\n        enabled: false\r\n    };\r\n    linkList: Array<string> = [];\r\n    linkCount: number = 0;\r\n    hashtagCount: number = 0;\r\n    mentionCount: number = 0;\r\n    replaceString = \"***\";\r\n    connectedLoaded = false;\r\n    dataLoaded = false;\r\n    tempHtml = \"\";\r\n\r\n    constructor() {\r\n        super();\r\n        (<any>window).trun = this;\r\n        const observer = new MutationObserver(() => {\r\n            if (this.connectedLoaded && !this.dataLoaded) {\r\n                this.initialValues();\r\n            }\r\n        });\r\n        // call 'observe' on that MutationObserver instance, \r\n        // passing it the element to observe, and the options object\r\n        observer.observe(this, { characterData: false, childList: true, attributes: false });\r\n    }\r\n\r\n    /** is object instanse of HighlighQuery / آیا آبجکت نمونه ای از HighlighQuery است \r\n     * @param {object}  object to check\r\n     * @returns {boolean}\r\n    */\r\n    private instanceOfHighlighQuery(object: any): object is HighlighQuery {\r\n        return typeof object === 'string' ? false : 'name' in object;\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.initialValues();\r\n        this.connectedLoaded = true;\r\n    }\r\n\r\n    attributeChangedCallback(attrName: string, _oldVal: any, _newVal: any) {\r\n        if (this.connectedLoaded) {\r\n            this.initialValues(attrName);\r\n        }\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['config'];\r\n    }\r\n    /** inital values / مقدار دهی اولیه */\r\n    private initialValues(attrName: string = \"config\") {\r\n\r\n        if (!this.innerHTML) {\r\n            return;\r\n        }\r\n        if (!this.tempHtml) {\r\n            this.tempHtml = this.innerHTML;\r\n        }\r\n\r\n        const conf = this.getAttribute(attrName);\r\n        if (conf?.length) {\r\n            this.config = JSON.parse(conf);\r\n            this.number = this.config.number ? this.config.number : this.number;\r\n            this.more = this.config.more ? this.config.more : this.more;\r\n            this.less = this.config.less ? this.config.less : this.less;\r\n            this._highlightQuery = this.config.highlightList ? this.config.highlightList : this._highlightQuery;\r\n            this.highlightCondition = this.config.highlightCondition ? this.config.highlightCondition : this.highlightCondition;\r\n            this.completeWord = this.config.completeWord ? this.config.completeWord : this.completeWord;\r\n            this.hashtag = this.config.hashtag ? this.config.hashtag : this.hashtag;\r\n            this.hasLiteral = this.config.hasLiteral ? this.config.hasLiteral : this.hasLiteral;\r\n            this.mention = this.config.mention ? this.config.mention : this.mention;\r\n            if (this.config.identifyLink) {\r\n                this.identifyLink.enabled = this.config.identifyLink.enabled;\r\n                this.identifyLink.title = this.config.identifyLink.title ? this.config.identifyLink.title : this.identifyLink.title;\r\n                this.identifyLink.class = this.config.identifyLink.class ? this.config.identifyLink.class : this.identifyLink.class;\r\n                this.identifyLink.style = this.config.identifyLink.style ? this.config.identifyLink.style : this.identifyLink.style;\r\n                this.identifyLink.domain = this.config.identifyLink.domain ? this.config.identifyLink.domain : this.identifyLink.domain;\r\n                this.identifyLink.protocol = this.config.identifyLink.protocol ? this.config.identifyLink.protocol : this.identifyLink.protocol;\r\n                this.identifyLink.target = this.config.identifyLink.target ? this.config.identifyLink.target : this.identifyLink.target;\r\n                this.identifyLink.hasQueryString = this.config.identifyLink.hasQueryString ? this.config.identifyLink.hasQueryString : this.identifyLink.hasQueryString;\r\n            }\r\n        }\r\n        else\r\n            return;\r\n\r\n        // sort highlight query\r\n        if (this._highlightQuery && this._highlightQuery.length)\r\n            this._highlightQuery.sort((a: HighlighQuery | string, b: HighlighQuery | string): number => {\r\n                if (this.instanceOfHighlighQuery(a) && this.instanceOfHighlighQuery(b)) {\r\n                    if (a.name && b.name)\r\n                        return a.name.length - b.name.length;\r\n                }\r\n                else if (typeof a === 'string' && this.instanceOfHighlighQuery(b)) {\r\n                    if (b.name)\r\n                        return a.length - b.name.length;\r\n                }\r\n                else if (this.instanceOfHighlighQuery(b) && typeof a === 'string') {\r\n                    if (b.name)\r\n                        return a.length - b.name.length;\r\n                }\r\n                else if (typeof b === 'string' && typeof a === 'string') {\r\n                    return a.length - b.length\r\n                }\r\n                else\r\n                    return 0;\r\n                return 0;\r\n            });\r\n        this.main(this.tempHtml);\r\n        this.dataLoaded = true;\r\n    }\r\n\r\n    /** main method, start working \r\n    * @param text {string}\r\n    */\r\n    private main(text: string): void {\r\n        if (!this.hasLiteral) text = text.replace(/(\\r\\n\\t|\\n|\\r\\t)/gm, ' ');\r\n        this.text = text;\r\n        let remainText = \"\";\r\n        if (text.length > this.number) {\r\n            remainText = this.cutFindHighlight(this.completeWord, this.hashtag, this.mention, text, this.highlightCondition, this._highlightQuery, this.number);\r\n            this.replace = true;\r\n            this.innerHTML = remainText + ' ... ';\r\n            const span = document.createElement('span');\r\n            span.innerHTML = this.more;\r\n            span.style.color = '#ff00ff';\r\n            span.style.cursor = 'pointer';\r\n            span.classList.add(\"toggleText\");\r\n            this.innerHTML = remainText + \"... \";\r\n\r\n            span.addEventListener('click', (event) => this.replace === true ? this.showFullText(event) : this.hideSomeText(event));\r\n            this.appendChild(span);\r\n        }\r\n        else {\r\n            text = this.cutFindHighlight(this.completeWord, this.hashtag, this.mention, text, this.highlightCondition, this._highlightQuery);\r\n            this.innerHTML = text;\r\n        }\r\n        //اعمال شود این کلاس قرار داده می شود  html در \\n برای اینکه کاراکتر های\r\n        if (this.hasLiteral)\r\n            this.style.whiteSpace = 'pre-line';\r\n    }\r\n\r\n\r\n\r\n    /** show full text / نمایش کامل متن\r\n     * @param mouseDown {mousedown} mouse event\r\n     */\r\n    private showFullText(mouseDown: MouseEvent): void {\r\n        const span = document.createElement('span');\r\n        span.innerHTML = \" \" + this.less;\r\n        span.style.color = '#ff00ff';\r\n        span.style.cursor = 'pointer';\r\n        span.classList.add(\"toggleText\");\r\n        this.innerHTML = this.cutFindHighlight(this.completeWord, this.hashtag, this.mention, this.text, this.highlightCondition, this._highlightQuery);\r\n        //اعمال شود این کلاس قرار داده می شود  html در \\n برای اینکه کاراکتر های\r\n        if (this.hasLiteral)\r\n            this.style.whiteSpace = 'pre-line';\r\n\r\n        span.addEventListener('click', (event) => this.hideSomeText(event));\r\n        this.appendChild(span);\r\n        // prevent from click on parent element\r\n        mouseDown.stopPropagation();\r\n        this.replace = false;\r\n    }\r\n    /** Display part of the text based on the number of characters requested / نمایش قسمتی از متن بر اساس تعداد کاراکتر خواسته شده\r\n     * @param mouseDown {mousedown} mouse event\r\n     */\r\n    private hideSomeText(mouseDown: MouseEvent): void {\r\n        const remainText = this.cutFindHighlight(this.completeWord, this.hashtag, this.mention, this.text, this.highlightCondition, this._highlightQuery, this.number);\r\n        const span = document.createElement('span');\r\n        span.style.color = '#ff00ff';\r\n        span.classList.add(\"toggleText\")\r\n\r\n        span.innerHTML = this.more;\r\n        this.innerHTML = remainText + ' ... ';\r\n        //اعمال شود این کلاس قرار داده میشود  html در  n \\برای اینکه کاراکتر های\r\n        if (this.hasLiteral)\r\n            this.style.whiteSpace = 'pre-line';\r\n\r\n        span.addEventListener('click', (event) => this.showFullText(event));\r\n        this.appendChild(span);\r\n        // prevent from click on parent element\r\n        mouseDown.stopPropagation();\r\n        this.replace = true;\r\n    }\r\n\r\n    /** cut text, find hashtag , mention , highlight and urls / کوتاه کردن متن ، پیدا کردن هشتگ ، منشن ، هایلایت و یو آر ال ها\r\n     * @param completeWord {boolean} condition to cut\r\n     * @param hashtag {boolean} condition to find hashtag\r\n     * @param mention {boolean} condition to find mentiong\r\n     * @param text {string} text to cut\r\n     * @param highlightCondition {string} condition to highlight\r\n     * @param highlightQuery {string} query to highlight\r\n     * @returns {string} cutted text\r\n    */\r\n    private cutFindHighlight(completeWord: boolean, hashtag: boolean, mention: boolean, text: string, highlightCondition = 'exactly', highlightQuery: Array<HighlighQuery | string> = [], number?: number) {\r\n        if (number)\r\n            text = completeWord ? this.checkWordCut(number, text) : text.substring(0, number);\r\n        if (this.identifyLink.enabled) {\r\n            text = this.linkIdentify(text);\r\n        }\r\n        text = hashtag ? this.findHashtag(text) : text;\r\n        text = mention ? this.findMention(text) : text;\r\n        text = this.highlight(text, highlightCondition, highlightQuery);\r\n\r\n        if (this.linkList.length > 0) {\r\n            text = this.linkList.reduce((text, link, currentIndex) => {\r\n                const href = link.includes('http') ? link.trimStart() : 'https://' + link.trimStart();\r\n                const target = this.identifyLink.target ? this.identifyLink.target : '_blank';\r\n                const title = this.identifyLink.title ? this.identifyLink.title : '';\r\n                const klass = this.identifyLink.class ? this.identifyLink.class : '';\r\n                const style = this.identifyLink.style ? this.identifyLink.style : '';\r\n                return text.replace(`${this.replaceString}${currentIndex}${this.replaceString}`, `<a href=\"${href}\" target=\"${target}\" title=\"${title}\" style=\"${style}\" class=\"${klass}\">${link}</a>`);\r\n            }, text);\r\n        }\r\n        this.linkCount = 0;\r\n        this.linkList = [];\r\n        return text;\r\n    }\r\n\r\n\r\n    /**\r\n     * find url in text and add to linkList\r\n     * @param text {string} text to find url\r\n     * @returns {string} text with url\r\n     */\r\n    private linkIdentify(text: string): string {\r\n        // main regex\r\n        // regex = /(^|[ ])(ftp:\\/\\/|(https?:)\\/\\/(www\\.)?|www\\.)([\\w]+\\.){1}(((\\:|\\/|\\?){1}\\S*)*|\\w+)+/gm\r\n        let regex;\r\n        let protocolRegex = \"(ftp:\\\\/\\\\/|(https?:)\\\\/\\\\/(www\\\\.)?|www\\\\.)\";\r\n        let domainRegex = \"\";\r\n        let queryString = \"\\\\w+\";\r\n        const afterDomain = \"(((\\\\:|\\\\/|\\\\?){1}\\\\S*)*|\\\\w+)+\";\r\n        if (this.identifyLink.protocol && this.identifyLink.protocol.length > 0)\r\n            protocolRegex = this.recognizingProtocol();\r\n        if (this.identifyLink.domain && this.identifyLink.domain.length > 0)\r\n            domainRegex = this.recongnizingDomain();\r\n        if (this.identifyLink.hasQueryString)\r\n            queryString = afterDomain;\r\n\r\n        regex = new RegExp(`(^|[ ])${protocolRegex}([\\\\w\\\\-\\\\.]+)${domainRegex}${queryString}`, 'gm');\r\n\r\n        let m;\r\n        while ((m = regex.exec(text)) !== null) {\r\n            this.linkList.push(m[0]);\r\n            text = text.replace(m[0], this.replaceString + this.linkCount + this.replaceString);\r\n            this.linkCount++;\r\n        }\r\n        return text;\r\n    }\r\n    /** create regex for prefix | protocol\r\n     * @returns {string} regex\r\n     */\r\n    private recognizingProtocol(): string {\r\n        if (this.identifyLink.protocol && this.identifyLink.protocol.length > 0) {\r\n            \r\n            this.identifyLink.protocol = this.identifyLink.protocol.sort();\r\n            let protocol = [];\r\n            if (this.identifyLink.protocol.find(p => p === 'ftp')) {\r\n                protocol.push(\"ftp:\\\\/\\\\/\");\r\n            }\r\n            if (this.identifyLink.protocol.find(p => p === 'http')) {\r\n                protocol.push(`http:\\\\/\\\\/(www\\\\.)?`);\r\n            }\r\n            if (this.identifyLink.protocol.find(p => p === 'https')) {\r\n                protocol.push(`https:\\\\/\\\\/(www\\\\.)?`);\r\n            }\r\n            if (this.identifyLink.protocol.find(p => p === 'www')) {\r\n                protocol.push(\"www\\\\.?\");\r\n            }\r\n            return \"(\" + protocol.join('|') + \")\";\r\n        }\r\n        return \"\";\r\n    }\r\n    /**\r\n     * create regex for domain\r\n     * @returns {string} regex\r\n     */\r\n    private recongnizingDomain(): string {\r\n        return this.identifyLink.domain ? \"(\" + this.identifyLink.domain.join('|') + \")\" : \"\";\r\n    }\r\n\r\n    /**\r\n     * Highlight the given words in the text / رنگ کردن کلمات داده شده در متن\r\n     * @param content {string} text to highlight\r\n     * @param highlightCondition {string} condition to highlight\r\n     * @param highlightQuery {Array<HighlighQuery | string>} \r\n     * @returns {string} highlighted text\r\n     */\r\n    private highlight(content: string, highlightCondition = \"\", highlightQuery: Array<HighlighQuery | string>): string {\r\n        //روی دایرکتیو تعریف نشود خود متن را بر می کرداند highlightList اگر ورودی\r\n        if (!highlightQuery || !highlightQuery.length) {\r\n            return content;\r\n        }\r\n        // دقیقا یافت می شود  highlightList روی دایرکتیو تعریف نشود کلمات داده شده در highlightCondition اگر ورودی\r\n        if (highlightCondition == \"exactly\") {\r\n            for (let q of highlightQuery) {\r\n                let pattern = '';\r\n                //به صورت آبجکت باشند highlightList اگر کلمات داده شده در\r\n                if (typeof q !== 'string') {\r\n                    pattern = \"(^|(?<!\\\\p{L}))(\" + q.name + \")(?!(\\\\p{L}))\";\r\n                    const color = q.color ? q.color : 'yellow';\r\n                    content = content.replace(new RegExp(pattern, 'gmu'), match => {\r\n                        return `<span style=\"background:${color}\">${match}</span>`;\r\n                    });\r\n                }\r\n                //به صورت رشته باشند highlightList اگر کلمات داده شده در\r\n                else {\r\n                    pattern = \"(^|(?<!\\\\p{L}))(\" + q + \")(?!(\\\\p{L}))\";\r\n                    content = content.replace(new RegExp(pattern, 'gmu'), match => {\r\n                        return `<span style=\"background:yellow\">${match}</span>`;\r\n                    });\r\n                }\r\n            }\r\n            return content;\r\n        }\r\n        //هر مشابهی از کلمات در متن پیدا شده و رنگ می شوند\r\n        else {\r\n            for (let q of highlightQuery) {\r\n                //به صورت آبجکت باشند highlightList اگر کلمات داده شده در\r\n                if (typeof q !== 'string' && q.name) {\r\n                    let words = content.match(new RegExp(q.name, \"gmi\"));\r\n                    words = [...new Set(words)];\r\n                    if (words)\r\n                        for (const word of words) {\r\n                            const color = q.color ? q.color : 'yellow';\r\n                            content = content.replace(new RegExp(q.name, \"gm\"), `<span style=\"background-color:${color}\">${word}</span>`);\r\n                        }\r\n                }\r\n                //به صورت رشته باشند highlightList اگر کلمات داده شده در\r\n                else {\r\n                    if (typeof q === 'string') {\r\n                        let words = content.match(new RegExp(q, \"gmi\"));\r\n                        words = [...new Set(words)];\r\n                        if (words)\r\n                            for (const word of words) {\r\n                                content = content.replace(new RegExp(word, \"gm\"), `<span style=\"background-color:yellow\">${word}</span>`);\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            return content;\r\n        }\r\n    }\r\n\r\n    /** check the word cut / بررسی کلمات برش شده\r\n     * @param number {number}\r\n     * @param text {string}\r\n     * @returns {string}\r\n     */\r\n    private checkWordCut(number: number, text: string): string {\r\n        let i = 0;\r\n        for (i = number; i < text.length; i++) {\r\n            if (text[i] == ' ') break;\r\n        }\r\n        return text.substring(0, i);\r\n    }\r\n\r\n    /** find hashtags in text / یافتن هشتگ در متن\r\n     * @param text {string}\r\n     * @returns {string}\r\n     */\r\n    private findHashtag(text: string): string {\r\n        text = text.replace(/(^|\\s)(#[\\p{Pc}\\p{N}\\p{L}\\u200cÀ-ÖØ-öø-ʸ(_)]+)/ugmi, (match) => {\r\n            return `<span class=\"hashtag\" style=\"color:#1b95e0\">${match}</span>`;\r\n        });\r\n        return text;\r\n    }\r\n\r\n    /** find mentions in text / یافتن منشن در متن\r\n     * @param text {string}\r\n     * @returns {string}\r\n    */\r\n    private findMention(text: string): string {\r\n        text = text.replace(/(^|\\s)(@[^0-9|\\.](\\w{1,30}|\\.)+)/gmi, (match) => {\r\n            return `<span class=\"mention\" style=\"color:#0095f6\">${match}</span>`;\r\n        });\r\n        return text;\r\n    }\r\n\r\n}\r\ncustomElements.define('truncate-element', TruncateElement);\r\n\r\n"],"sourceRoot":""}