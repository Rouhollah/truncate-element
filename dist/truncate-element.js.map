{"version":3,"file":"truncate-element.js","mappings":"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","sources":["webpack://truncate-element/webpack/universalModuleDefinition","webpack://truncate-element/webpack/bootstrap","webpack://truncate-element/webpack/runtime/define property getters","webpack://truncate-element/webpack/runtime/hasOwnProperty shorthand","webpack://truncate-element/webpack/runtime/make namespace object","webpack://truncate-element/./src/services.ts","webpack://truncate-element/./src/truncate-element.ts","webpack://truncate-element/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"truncate-element\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"truncate-element\"] = factory();\n\telse\n\t\troot[\"truncate-element\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Config, HighlighQuery, IdentifyLink, MyHighLightQuery } from \"./interfaces\";\r\n\r\nexport abstract class ProccessModel {\r\n    constructor(_config: any) { }\r\n    abstract process(word: string | WordModel): WordModel;\r\n}\r\nexport class WordModel {\r\n    word: string = \"\";\r\n    length: number = 0;\r\n    type: string = \"simple\";\r\n    html?: string = \"\";\r\n\r\n    constructor(word: string) {\r\n        this.word = word;\r\n        this.length = word.length;\r\n    }\r\n\r\n}\r\nexport interface Type<T> extends Function {\r\n    new(...args: any[]): T;\r\n}\r\n\r\nexport interface GeneralModel {\r\n    model: Type<ProccessModel>\r\n}\r\n\r\nexport class WordCut {\r\n    Number: number;\r\n\r\n    /**\r\n     * create an instance of WordCut with desired number\r\n     * @param num number\r\n     */\r\n    constructor(num: number) {\r\n        this.Number = num;\r\n    }\r\n\r\n    /**\r\n     * truncate the string to the desired number \r\n     * @param text string\r\n     * @returns string\r\n     */\r\n    cut(text: string): string {\r\n        let i = 0;\r\n        for (i = this.Number; i < text.length; i++) {\r\n            if (text[i] == ' ') break;\r\n        }\r\n        return text.substring(0, i);\r\n    }\r\n}\r\n\r\nexport class Link extends ProccessModel {\r\n    IdentifyLink: IdentifyLink;;\r\n    LinkCount: number = 0;\r\n    LinkList: Array<string> = [];\r\n    constructor(_config: Config) {\r\n        super(_config);\r\n        if (_config.identifyLink)\r\n            this.IdentifyLink = _config.identifyLink;\r\n        else\r\n            this.IdentifyLink = {\r\n                enabled: false\r\n            }\r\n    }\r\n\r\n    /**\r\n     * process model for identifying links\r\n     * @param model WordModel class\r\n     * @returns WordModel\r\n     */\r\n    process(model: WordModel): WordModel {\r\n        // main regex\r\n        // regex = /(^|[ ])(ftp:\\/\\/|(https?:)\\/\\/(www\\\\.)?|www\\.)[0-9a-zA-Z]([-.\\w]+)(((\\:|\\/|\\?){1}\\S*)*|\\w+)+/gm\r\n        let regex;\r\n        let protocolRegex = \"(ftp:\\\\/\\\\/|(https?:)\\\\/\\\\/(www\\\\.)?|www\\\\.)\";\r\n        let domainRegex = \"\";\r\n        let queryString = \"\\\\w+\";\r\n        const afterDomain = \"(((\\\\:|\\\\/|\\\\?){1}\\\\S*)*|\\\\w+)+\";\r\n        if (this.IdentifyLink.protocol && this.IdentifyLink.protocol.length > 0)\r\n            protocolRegex = this.recognizingProtocol();\r\n        if (this.IdentifyLink.domain && this.IdentifyLink.domain.length > 0)\r\n            domainRegex = this.recongnizingDomain();\r\n        if (this.IdentifyLink.hasQueryString)\r\n            queryString = afterDomain;\r\n\r\n        regex = new RegExp(`(^|[ ])${protocolRegex}[0-9a-zA-Z]([-.\\\\w]+)${domainRegex}${queryString}`, 'gm');\r\n\r\n        let m;\r\n        while ((m = regex.exec(model.word)) !== null) {\r\n            this.LinkList.push(m[0]);\r\n            let protocol = m[0];\r\n            if (m[0].substring(0, 3) === 'www') {\r\n                protocol = 'http://' + m[0];\r\n            }\r\n            model.html = `<a href=${protocol} ${this.IdentifyLink.target ? \"target=\" + this.IdentifyLink.target : ''} ${this.IdentifyLink.title ? \"title=\" + this.IdentifyLink.title : ''} ${this.IdentifyLink.class ? \"class=\" + '\"' + this.IdentifyLink.class + '\"' : ''} ${this.IdentifyLink.style ? \"style=\" + this.IdentifyLink.style : ''}>${model.html ? model.html : model.word}</a>`;\r\n            model.type += ' link';\r\n        }\r\n        return model;\r\n\r\n    }\r\n    /** create regex for prefix | protocol\r\n     * @returns {string} regex\r\n     */\r\n    private recognizingProtocol(): string {\r\n        if (this.IdentifyLink.protocol && this.IdentifyLink.protocol.length > 0) {\r\n\r\n            this.IdentifyLink.protocol = this.IdentifyLink.protocol.sort();\r\n            let protocol = [];\r\n            if (this.IdentifyLink.protocol.find(p => p === 'ftp')) {\r\n                protocol.push(\"ftp:\\\\/\\\\/\");\r\n            }\r\n            if (this.IdentifyLink.protocol.find(p => p === 'http')) {\r\n                protocol.push(`http:\\\\/\\\\/(www\\\\.)?`);\r\n            }\r\n            if (this.IdentifyLink.protocol.find(p => p === 'https')) {\r\n                protocol.push(`https:\\\\/\\\\/(www\\\\.)?`);\r\n            }\r\n            if (this.IdentifyLink.protocol.find(p => p === 'www')) {\r\n                protocol.push(\"www\\\\.?\");\r\n            }\r\n            return \"(\" + protocol.join('|') + \")\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /** create regex for domain\r\n     * @returns {string} regex\r\n     */\r\n    private recongnizingDomain(): string {\r\n        return this.IdentifyLink.domain ? \"(\" + this.IdentifyLink.domain.join('|') + \")\" : \"\";\r\n    }\r\n}\r\n\r\nexport class Mention extends ProccessModel {\r\n\r\n    /**\r\n     * process model for identifying mentions\r\n     * @param model {class} WordModel\r\n     * @returns WordModel\r\n     */\r\n    process(model: WordModel): WordModel {\r\n        const pattern = /(^|\\s)(@[^\\d\\.\\s](\\w{1,30}|\\.)+)$/gmi;\r\n        if (pattern.test(model.word)) {\r\n            model.type += ' mention';\r\n            model.html = `<span class=mention style=color:#0095f6>${model.html ? model.html : model.word}</span>`\r\n        }\r\n        return model;\r\n    }\r\n}\r\n\r\nexport class Hashtag extends ProccessModel {\r\n\r\n    /**\r\n     * process model for identifying hashtags\r\n     * @param model {class} WordModel\r\n     * @returns WordModel\r\n     */\r\n    process(model: WordModel): WordModel {\r\n        const pattern = /(^|\\s)(#[\\p{Pc}\\p{N}\\p{L}\\u200cÀ-ÖØ-öø-ʸ(_)]+)$/gmui;\r\n        if (pattern.test(model.word)) {\r\n            model.html = `<span class=hashtag style=color:#1b95e0>${model.html ? model.html : model.word}</span>`;\r\n            model.type += ' hashtag';\r\n        }\r\n        return model;\r\n    }\r\n}\r\n\r\nexport class Highlight extends ProccessModel {\r\n    highlightQuery: Array<MyHighLightQuery> = [];\r\n    highlightCondition: string = '';\r\n    nestedHighlightArray: Array<MyHighLightQuery> = [];\r\n    checkedNestedHighlight: boolean = false;\r\n    constructor(_config: Config) {\r\n        super(_config);\r\n        (<any>window).highlight = this;\r\n        if (_config.highlightList) {\r\n            this.highlightQuery = _config.highlightList.map((h: HighlighQuery | string) => {\r\n                let high: Partial<MyHighLightQuery> = {};\r\n                if (this.instanceOfHighlighQuery(h)) {\r\n                    high.name = h.name;\r\n                    high.color = h.color;\r\n                }\r\n                else {\r\n                    high.name = h;\r\n                    high.color = 'yellow';\r\n                }\r\n                high.tag = '';\r\n                high.index = 0;\r\n                high.existInAnotherQuery = false;\r\n                high.parent = '';\r\n                high.parentTag = '';\r\n                high.content = '';\r\n                return high as MyHighLightQuery;\r\n            });\r\n        }\r\n        else {\r\n            this.highlightQuery = [];\r\n        }\r\n\r\n        this.highlightCondition = _config.highlightCondition;\r\n        if (this.highlightQuery.length) {\r\n            this.highlightQuery.sort((a: MyHighLightQuery, b: MyHighLightQuery): number => {\r\n                return a.name.length - b.name.length;\r\n            })\r\n        }\r\n        if (!this.checkedNestedHighlight)\r\n            this.nestedHighlightArray = this.findHighlightInAnother();\r\n        else\r\n            this.nestedHighlightArray = [];\r\n    }\r\n\r\n    /**\r\n    * finds words in highlightQuery array and color them\r\n    * @returns Array<Sible>\r\n    */\r\n    private findHighlightInAnother(): Array<MyHighLightQuery> {\r\n        const firstElement = this.highlightQuery[0];\r\n        firstElement.tag = this.createTag(firstElement.color, firstElement.name);\r\n        firstElement.existInAnotherQuery = false;\r\n        firstElement.content = '';\r\n        firstElement.parent = '';\r\n        firstElement.parentTag = '';\r\n\r\n        for (let i = 1; i < this.highlightQuery.length; i++) {\r\n            const currentElement = this.highlightQuery[i];\r\n            const perviousElement = this.highlightQuery[i - 1];\r\n            if (currentElement.name.includes(perviousElement.name)) {\r\n                this.transform(currentElement, perviousElement);\r\n                continue;\r\n            }\r\n            else {\r\n                let j = i;\r\n                while (j >= 1) {\r\n                    let pervious = this.highlightQuery[j - 1];\r\n                    if (currentElement.name.includes(pervious.name)) {\r\n                        this.transform(currentElement, pervious);\r\n                        break;\r\n                    }\r\n                    else if (j == 1) {\r\n                        currentElement.tag = this.createTag(currentElement.color, currentElement.name);\r\n                        currentElement.content = '';\r\n                        currentElement.parent = '';\r\n                        currentElement.parentTag = '';\r\n                    }\r\n                    j--;\r\n                }\r\n            }\r\n\r\n        }\r\n        const nestedArray = this.highlightQuery.filter(m => m.existInAnotherQuery);\r\n        this.highlightQuery = this.highlightQuery.filter(m => !m.existInAnotherQuery);\r\n        //console.log('highlightQuery=>', this.highlightQuery, 'nestedArray=>', nestedArray);\r\n\r\n        this.checkedNestedHighlight = true;\r\n        return nestedArray;\r\n    }\r\n\r\n\r\n    private transform(current: MyHighLightQuery, pervious: MyHighLightQuery) {\r\n        // name of current object is parent for pervious object\r\n        pervious.parent = current.name;\r\n        current.content = current.name.replace(pervious.name, pervious.tag);\r\n        pervious.parentTag = this.createTag(current.color, current.content);\r\n        current.tag = pervious.parentTag;\r\n        pervious.existInAnotherQuery = true;\r\n        current.existInAnotherQuery = false;\r\n    }\r\n\r\n    /** is object instance of HighlighQuery \r\n     * @param {object}  object to check\r\n     * @returns {boolean} true or false\r\n    */\r\n    private instanceOfHighlighQuery(object: any): object is HighlighQuery {\r\n        return typeof object === 'string' ? false : 'name' in object;\r\n    }\r\n    /**\r\n        * process model for highlighting\r\n        * @param model WordModel class\r\n        * @returns WordModel\r\n        */\r\n    process(model: WordModel): WordModel {\r\n        if (!this.highlightQuery || !this.highlightQuery.length) {\r\n            return model;\r\n        }\r\n        if (this.highlightCondition == \"exactly\") {\r\n            for (let q of this.highlightQuery) {\r\n                if (q.name.length > model.length) continue;\r\n                const pattern = \"(^|(?<!\\\\p{L}))(\" + q.name + \")(?!(\\\\p{L}))\";\r\n                const regex = new RegExp(pattern, 'gmu');\r\n                if (regex.test(model.word)) {\r\n                    regex.lastIndex = 0;\r\n                    model.html = this.createTag(q.color, q.name);\r\n                    model.type = model.type.concat(' highlight');\r\n                }\r\n                return model;\r\n            }\r\n            return model;\r\n        }\r\n        else {\r\n            if (this.nestedHighlightArray.length) {\r\n                for (let i = this.nestedHighlightArray.length; i--; i == 0) {\r\n                    const nested = this.nestedHighlightArray[i];\r\n                    const regex = new RegExp(nested.name, 'gmi');\r\n                    if (regex.test(model.word)) {\r\n                        regex.lastIndex = 0;\r\n                        model.html = model.word.replace(new RegExp(nested.name, 'gm'), nested.tag);\r\n                        // return model;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (this.highlightQuery.length) {\r\n                for (const q of this.highlightQuery) {\r\n                    const regex = new RegExp(q.name, 'gmi');\r\n                    if (regex.test(model.word)) {\r\n                        regex.lastIndex = 0;\r\n                        if (model.html && model.html.split(q.name).length == 1) {\r\n                            model.html = model.word.replace(new RegExp(q.name, 'gmu'), q.tag);\r\n                        }\r\n                        else if (model.html) {\r\n                            let tag = model.html.split(q.name)\r\n                            for (let index = 0; index < tag.length; index++) {\r\n                                if (index == tag.length - 1)\r\n                                    break;\r\n                                tag[index] = tag[index] + q.tag;\r\n\r\n                            }\r\n                            model.html = tag.join('');\r\n                        }\r\n                        else {\r\n                            model.html = model.word.replace(new RegExp(q.name, 'gmu'), match => {\r\n                                return `<span style=\"background:${q.color}\">${match}</span>`;\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return model;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * create span tag with favorite color\r\n     * @param color \r\n     * @param word \r\n     * @returns string\r\n     */\r\n    private createTag(color: string, word: string) {\r\n        return `<span style=\"background:${color}\">${word}</span>`;\r\n    }\r\n}\r\n\r\nexport class NullModel extends ProccessModel {\r\n\r\n    /**\r\n     * get string and convert to WordModel\r\n     * @param model WordModel class\r\n     * @returns WordModel\r\n     */\r\n    process(word: string): WordModel {\r\n        return new WordModel(word);\r\n    }\r\n}\r\n\r\n","import { HighlighQuery, Config, IdentifyLink } from \"./interfaces\";\r\nimport { WordCut, Link, Hashtag, Mention, Highlight, NullModel, GeneralModel, ProccessModel, Type, WordModel } from \"./services\";\r\n\r\nexport class TruncateElement extends HTMLElement {\r\n    _highlightQuery: Array<HighlighQuery | string> = [];\r\n    config: Config = {\r\n        number: 0,\r\n        more: \"\",\r\n        less: \"\",\r\n        completeWord: false,\r\n        hashtag: false,\r\n        hasLiteral: false,\r\n        highlightCondition: 'exactly',\r\n        highlightList: [{ name: '', color: '' }],\r\n        mention: false,\r\n    };\r\n    number: number = 100;\r\n    more: string = \"show\";\r\n    less: string = \"hide\";\r\n    completeWord: boolean = false;\r\n    hashtag: boolean = false;\r\n    hasLiteral: boolean = false;\r\n    highlightCondition: string = 'exactly';\r\n    highlightList: HighlighQuery[] = [{ name: '', color: '' }];\r\n    text: string = \"\";\r\n    /** to display show or hide button*/\r\n    truncated: boolean = false;\r\n    mention: boolean = false;\r\n    identifyLink: IdentifyLink = {\r\n        hasQueryString: false,\r\n        title: \"\",\r\n        class: \"\",\r\n        style: \"text-decoration:none;color:blue;\",\r\n        domain: [],\r\n        protocol: [],\r\n        target: \"_blank\",\r\n        enabled: false\r\n    };\r\n    userModels: Array<GeneralModel> = [];\r\n    linkList: Array<string> = [];\r\n    linkCount: number = 0;\r\n    hashtagCount: number = 0;\r\n    mentionCount: number = 0;\r\n    connectedLoaded = false;\r\n    dataLoaded = false;\r\n    tempHtml = \"\";\r\n    wordArray: Array<string> = [];\r\n    remainText: string = \"\";\r\n    fullText: string = \"\";\r\n    truncatedWord = { model: new WordModel(''), index: 0 };\r\n    processModels: Array<GeneralModel> = [];\r\n    constructor() {\r\n        super();\r\n        (<any>window).trun = this;\r\n        const observer = new MutationObserver(() => {\r\n            if (this.connectedLoaded && !this.dataLoaded) {\r\n                this.initialValues();\r\n            }\r\n        });\r\n        // call 'observe' on that MutationObserver instance, \r\n        // passing it the element to observe, and the options object\r\n        observer.observe(this, { characterData: false, childList: true, attributes: false });\r\n    }\r\n\r\n    addUserModel(...userModel: Array<Type<ProccessModel>>) {\r\n        this.userModels.push(...userModel.map(f => ({ model: f } as GeneralModel)));\r\n    }\r\n\r\n    connectedCallback() {\r\n        setTimeout(() => {\r\n            this.initialValues();\r\n        }, 0)\r\n        this.connectedLoaded = true;\r\n    }\r\n\r\n    attributeChangedCallback(attrName: string, _oldVal: any, _newVal: any) {\r\n        if (this.connectedLoaded) {\r\n            this.initialValues(attrName);\r\n        }\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['config'];\r\n    }\r\n    /** initial values */\r\n    private initialValues(attrName: string = \"config\") {\r\n        if (!this.innerHTML) {\r\n            return;\r\n        }\r\n        if (!this.tempHtml) {\r\n            this.tempHtml = this.innerHTML;\r\n        }\r\n\r\n        const conf = this.getAttribute(attrName);\r\n        if (conf?.length) {\r\n            this.config = JSON.parse(conf);\r\n            this.number = this.config.number ? this.config.number : this.number;\r\n            this.more = this.config.more ? this.config.more : this.more;\r\n            this.less = this.config.less ? this.config.less : this.less;\r\n            this._highlightQuery = this.config.highlightList ? this.config.highlightList : this._highlightQuery;\r\n            this.highlightCondition = this.config.highlightCondition ? this.config.highlightCondition : this.highlightCondition;\r\n            this.completeWord = this.config.completeWord ? this.config.completeWord : this.completeWord;\r\n            this.hashtag = this.config.hashtag ? this.config.hashtag : this.hashtag;\r\n            this.hasLiteral = this.config.hasLiteral ? this.config.hasLiteral : this.hasLiteral;\r\n            this.mention = this.config.mention ? this.config.mention : this.mention;\r\n            if (this.config.identifyLink) {\r\n                this.identifyLink.enabled = this.config.identifyLink.enabled;\r\n                this.identifyLink.title = this.config.identifyLink.title ? this.config.identifyLink.title : this.identifyLink.title;\r\n                this.identifyLink.class = this.config.identifyLink.class ? this.config.identifyLink.class : this.identifyLink.class;\r\n                this.identifyLink.style = this.config.identifyLink.style ? this.config.identifyLink.style : this.identifyLink.style;\r\n                this.identifyLink.domain = this.config.identifyLink.domain ? this.config.identifyLink.domain : this.identifyLink.domain;\r\n                this.identifyLink.protocol = this.config.identifyLink.protocol ? this.config.identifyLink.protocol : this.identifyLink.protocol;\r\n                this.identifyLink.target = this.config.identifyLink.target ? this.config.identifyLink.target : this.identifyLink.target;\r\n                this.identifyLink.hasQueryString = this.config.identifyLink.hasQueryString ? this.config.identifyLink.hasQueryString : this.identifyLink.hasQueryString;\r\n            }\r\n        }\r\n        else\r\n            return;\r\n\r\n        this.main(this.tempHtml);\r\n        this.dataLoaded = true;\r\n    }\r\n\r\n\r\n    /** main method, start working \r\n    * @param text {string}\r\n    */\r\n    private main(text: string): void {\r\n        if (!this.hasLiteral)\r\n            text = text.replace(/(\\r\\n\\t|\\r\\n|\\n|\\r\\t)/gm, ' ');\r\n\r\n        this.text = text;\r\n        if (text.length > this.number) {\r\n            this.truncated = true;\r\n            const wordCut = new WordCut(this.number);\r\n            if (this.completeWord)\r\n                text = wordCut.cut(text)\r\n            else {\r\n                text = text.substring(0, this.number);\r\n                const last = this.text.split(\" \")[text.split(\" \").length - 1]\r\n                this.truncatedWord.model = this.reviewTruncatedWordHasLink(last);\r\n                this.truncatedWord.index = text.split(\" \").length - 1;\r\n            }\r\n        }\r\n        // all necessary classes\r\n        this.processModels = this.generateModels();\r\n\r\n        // just once calling each class\r\n        const instances = this.callOnceClasses()\r\n\r\n        const cuttedArray = text.split(\" \");\r\n        const fullArray = this.text.split(\" \");\r\n        const _cuttedwords = this.createWordModelFromString(cuttedArray);\r\n        const _fullwords = this.createWordModelFromString(fullArray);\r\n\r\n        //process all attributes of config and user models defined for each word\r\n        const remain = this.proccessOnWordModels(_cuttedwords, instances);\r\n        const full = this.proccessOnWordModels(_fullwords, instances);\r\n\r\n        if (remain.length) {\r\n            this.remainText = remain.map(m => m.html ? m.html : m.word).join(\" \") + \" ... \";\r\n\r\n            if (!this.completeWord) {\r\n                const l = remain.pop();\r\n                if (l && this.truncatedWord.model.type.includes('link')) {\r\n                    const replacement = this.truncatedWord.model.word;\r\n                    this.remainText = this.remainText.replace(new RegExp(`<a href=${l.word} `), `<a href=${replacement} `)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.remainText = text + \" ... \";\r\n        }\r\n\r\n        if (full.length) [\r\n            this.fullText = full.map(m => m.html ? m.html : m.word).join(\" \")\r\n        ]\r\n        else {\r\n            this.fullText = this.text;\r\n        }\r\n\r\n        this.truncated ? this.initialText(this.remainText, this.more) : this.initialText(this.fullText);\r\n        //This class is placed in order to apply \\n characters in html\r\n        if (this.hasLiteral)\r\n            this.style.whiteSpace = 'pre-line';\r\n    }\r\n\r\n    /**\r\n     * once calling each class\r\n     * @returns \r\n     */\r\n    private callOnceClasses() {\r\n        const instances: Array<ProccessModel> = [];\r\n        for (const gm of this.processModels) {\r\n            instances.push(new gm.model(this.config));\r\n        }\r\n        return instances;\r\n    }\r\n\r\n    /**\r\n     * review if the word is truncated has link or not\r\n     * @param word string\r\n     * @returns WordModel\r\n     */\r\n    private reviewTruncatedWordHasLink(word: string): WordModel {\r\n        const link = new Link(this.config);\r\n        return link.process(new WordModel(word));\r\n    }\r\n\r\n    /**\r\n     * finally process all attributes of config and user models defined for each word\r\n     * @param _words WordModel[]\r\n     * @param instances ProccessModel[]\r\n     * @returns WordModel[]\r\n     */\r\n    private proccessOnWordModels(_words: Array<WordModel>, instances: Array<ProccessModel>): Array<WordModel> {\r\n        for (let word of _words) {\r\n            for (const gm of instances) {\r\n                if (word.length == 0) continue;\r\n                word = gm.process(word);\r\n            }\r\n        }\r\n        return _words;\r\n    }\r\n\r\n    /**\r\n     * create WordModel class of each wrod\r\n     * @param array {string[]}\r\n     * @returns string[]\r\n     */\r\n    private createWordModelFromString(array: Array<string>) {\r\n        const _words: WordModel[] = [];\r\n        const nullModel = new NullModel(this.config);\r\n        for (const word of array) {\r\n            _words.push(nullModel.process(word));\r\n        }\r\n        return _words;\r\n    }\r\n\r\n    /**\r\n     * generate necessary classes for each word\r\n     * @returns GeneralModel[]\r\n     */\r\n    private generateModels(): Array<GeneralModel> {\r\n        const generalModels: Array<GeneralModel> = [];\r\n\r\n        if (this.config.highlightList?.length)\r\n            generalModels.push({ model: Highlight });\r\n\r\n        if (this.config.identifyLink?.enabled)\r\n            generalModels.push({ model: Link });\r\n\r\n        if (this.config.hashtag)\r\n            generalModels.push({ model: Hashtag });\r\n\r\n        if (this.config.mention)\r\n            generalModels.push({ model: Mention });\r\n\r\n        if (this.userModels?.length) {\r\n            this.userModels.forEach(user => {\r\n                generalModels.push(user);\r\n            });\r\n        }\r\n        return generalModels;\r\n    }\r\n\r\n    /**\r\n     * display text in first time\r\n     * @param text \r\n     * @param toggle \r\n     */\r\n    private initialText(text: string, toggle?: string): void {\r\n        if (toggle) {\r\n            const span = this.createSpan(toggle);\r\n            this.innerHTML = text;\r\n            this.appendChild(span);\r\n        }\r\n        else\r\n            this.innerHTML = text;\r\n    }\r\n\r\n    /**\r\n     * display string after click on toggle text\r\n     * @param text string\r\n     * @param mouseDown mouse event\r\n     */\r\n    private showText(text: string, mouseDown: MouseEvent): void {\r\n        this.truncated = !this.truncated;\r\n        const span = this.createSpan(this.truncated ? this.more : this.less);\r\n        this.innerHTML = text;\r\n        if (this.hasLiteral)\r\n            this.style.whiteSpace = 'pre-line';\r\n        mouseDown.stopPropagation();\r\n        this.appendChild(span);\r\n    }\r\n\r\n    /**\r\n     * create span for toggling\r\n     * @param toggle custom word for toggle\r\n     * @returns \r\n     */\r\n    private createSpan(toggle: string): HTMLSpanElement {\r\n        const span = document.createElement('span');\r\n        span.innerHTML = ' ' + toggle;\r\n        span.style.color = '#ff00ff';\r\n        span.style.cursor = 'pointer';\r\n        span.classList.add(\"toggleText\");\r\n        span.addEventListener('click', (event) => this.showText(this.truncated ? this.fullText : this.remainText, event));\r\n        return span;\r\n    }\r\n\r\n}\r\nif (!customElements.get('truncate-element')) {\r\n    customElements.define('truncate-element', TruncateElement);\r\n}\r\n\r\n\r\n","export * from './interfaces';\r\nexport * from './services'\r\nexport * from './truncate-element';\r\n"],"names":[],"sourceRoot":""}